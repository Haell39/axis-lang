// Gramática da linguagem Axis
// Inspirada em Python, Kotlin e Go

start: statement*

statement: assignment
         | if_statement
         | for_statement
         | while_statement
         | function_declaration
         | return_statement
         | expression_statement
         | block

assignment: IDENTIFIER "=" expression
          | IDENTIFIER ":=" expression

if_statement: "if" "(" expression ")" block ("else" block)?

for_statement: "for" "(" assignment ";" expression ";" assignment ")" block
             | "for" IDENTIFIER "in" expression block

while_statement: "while" "(" expression ")" block

function_declaration: "fun" IDENTIFIER "(" parameters? ")" ("->" type)? block

parameters: parameter ("," parameter)*

parameter: IDENTIFIER ":" type

return_statement: "return" expression?

expression_statement: expression

block: "{" statement* "}"

expression: logical_or

logical_or: logical_and ("||" logical_and)*

logical_and: equality ("&&" equality)*

equality: comparison (("==" | "!=") comparison)*

comparison: term (("<" | ">" | "<=" | ">=") term)*

term: factor (("+" | "-") factor)*

factor: unary (("*" | "/" | "%") unary)*

unary: ("!" | "-") unary
      | primary

primary: NUMBER
       | STRING
       | IDENTIFIER
       | "(" expression ")"
       | function_call

function_call: IDENTIFIER "(" arguments? ")"

arguments: expression ("," expression)*

type: "Int" | "String" | "Bool" | "Float"

// Tokens
IDENTIFIER: /[a-zA-Z_][a-zA-Z0-9_]*/
NUMBER: /[0-9]+(\.[0-9]+)?/
STRING: /"[^"]*"/

// Ignorar espaços em branco
%import common.WS
%ignore WS

%import common.NEWLINE
COMMENT: /\/\/[^\n]*/
%ignore COMMENT 